call plug#begin('~/.local/share/nvim/plugged')

" Ruby on Rails/Ruby Plug 'vim-ruby/vim-ruby'
Plug 'vim-ruby/vim-ruby'
Plug 'tpope/vim-rails'

" Javascript
Plug '1995eaton/vim-better-javascript-completion', { 'for': 'javascript' }
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
Plug 'joukevandermaas/vim-ember-hbs'

Plug 'tpope/vim-fugitive'
Plug 'scrooloose/nerdtree'
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'
Plug 'dracula/vim'
Plug 'vim-airline/vim-airline'
Plug 'scrooloose/nerdcommenter'
Plug 'tpope/vim-endwise'
Plug 'Yggdroot/indentLine'
Plug 'Raimondi/delimitMate'
Plug 'slim-template/vim-slim'
Plug 'prettier/vim-prettier', { 'do': 'yarn install' }
Plug 'w0rp/ale'
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
Plug 'othree/html5.vim'
Plug 'cakebaker/scss-syntax.vim'
Plug 'airblade/vim-gitgutter'
Plug 'ap/vim-css-color'

call plug#end()

colorscheme dracula

let mapleader="]"
set foldenable
set relativenumber
set sw=2
set ts=2
set sts=2
set expandtab
set autoread
set wrap
set mouse=a
set conceallevel=0
let g:indentLine_setConceal = 0

noremap <Leader>t :tabnew<cr>
nmap <C-t><up> :tabr<cr>
nmap <C-t><down> :tabl<cr>
nmap <C-t><left> :tabp<cr>
nmap <C-t><right> :tabn<cr>

noremap <Leader>y "*y
noremap <Leader>p "*p
noremap <Leader>Y "+y
noremap <Leader>P "+p

inoremap jj <ESC>
nmap <leader>s<left>   :leftabove  vnew<cr>
nmap <leader>s<right>  :rightbelow vnew<cr>
nmap <leader>s<up>     :leftabove  new<cr>
nmap <leader>s<down>   :rightbelow new<cr>

nnoremap <C-j> <C-W><C-J>
nnoremap <C-k> <C-W><C-K>
nnoremap <C-l> <C-W><C-L>
nnoremap <C-h> <C-W><C-H>

" ctrl+c to toggle highlight.
let hlstate=0
nnoremap <c-c> :if (hlstate%2 == 0) \| nohlsearch \| else \| set hlsearch \| endif \| let hlstate=hlstate+1<cr>

map <leader>pdb oimport pdb; pdb.set_trace()<esc>:w<cr>
map <Leader>pry obinding.pry<esc>:w<cr>
map <Leader>log oconsole.log('')<left><left>

" fzf.vim
nnoremap <silent> t :FZF<cr>
nnoremap <silent> f :Ag<cr>
noremap <leader>b :Ag <C-R><C-W><C

" NERDTree
noremap <leader>n :NERDTreeToggle<CR>
noremap <leader>f :NERDTreeFind<CR>
" let NERDTreeHighlightCursorline=1
let NERDTreeIgnore = ['tmp', '.yardoc', 'pkg', '\.pyc$', '\~$']
" NERCCommenter
let g:NERDSpaceDelims = 2

autocmd FileType scss setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType javascript setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType html.handlebars setlocal ts=2 sw=2 sts=2 expandtab

" Ale Config
" Ref: https://www.notion.so/intercomrades/Editor-Setup-a77ca090fe48495c9bf82714963252c8
let g:ale_linters = { 'javascript': ['eslint'] }
let g:ale_fixers = {
\   'javascript': ['prettier'],
\   'css': ['prettier'],
\}
" Format on Save
let g:ale_fix_on_save = 1
" Respect local Prettier config files
let g:ale_javascript_prettier_use_local_config = 1
let g:ale_sign_column_always = 1
let g:ale_sign_error = '=>'

" Use deoplete.
let g:deoplete#enable_at_startup = 1
